@using Topppro.Entities
@using Framework.MVC.Resources
@using Framework.MVC.Extensions
@using Topppro.WebSite.Areas.SecureSite.Resources

@functions {
    string ShowHideBlock(bool condition) {
        if (condition)
            return "display:block;";

        return "display:none;";
    }
}

@model Topppro.Entities.Download

@Html.HiddenFor(model => model.ProductId)
@Html.ValidationMessageFor(model => model.ProductId)

<div class="form-group">
    @Html.LabelFor(model => model.DownloadTypeId)
    @Html.DropDownListFor(model => model.DownloadTypeId, (IEnumerable<SelectListItem>)ViewBag.DownloadTypes, PersistanceResource.Selection, new { onchange = "onChange_DownloadType(this)", @class = "form-control", style = "width:400px;" })
    @Html.ValidationMessageFor(model => model.DownloadTypeId, null, new { @class = "label label-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Resource)
    @Html.DropDownListFor(model => model.Resource, (IEnumerable<SelectListItem>)ViewBag.Resources, PersistanceResource.Selection, new { id="select_Resource", @class = "form-control", style = String.Concat("width:400px;", ShowHideBlock(Model.DownloadTypeId == (int)Enums.DownloadType.Windows || Model.DownloadTypeId == (int)Enums.DownloadType.Mac)) })
    @Html.TextBoxFor(model => model.Resource, new { id = "input_Resource", @class = "form-control", style = String.Concat("width:400px;", ShowHideBlock(Model.DownloadTypeId == (int)Enums.DownloadType.IOS_App || Model.DownloadTypeId == (int)Enums.DownloadType.Android)) })
    @Html.ValidationMessageFor(model => model.Resource, null, new { @class = "label label-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CultureId)
    @Html.DropDownListFor(model => model.CultureId, (IEnumerable<SelectListItem>)ViewBag.Cultures, PersistanceResource.Selection, new { @class = "form-control", style = "width:400px;" })
    @Html.ValidationMessageFor(model => model.CultureId, null, new { @class = "label label-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Name)
    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", style = "width:400px;" })
    @Html.ValidationMessageFor(model => model.Name, null, new { @class = "label label-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description)
    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "width:400px;" })
    @Html.ValidationMessageFor(model => model.Description, null, new { @class = "label label-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Priority)
    @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", style = "width:400px;" })
    @Html.ValidationMessageFor(model => model.Priority)
</div>

<div class="checkbox">
    <label>
        @Html.CheckBoxFor(model => model.Enabled)
        @Html.DisplayNameFor(model => model.Enabled)
        @Html.ValidationMessageFor(model => model.Enabled)
    </label>
</div>
