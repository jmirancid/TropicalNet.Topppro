@using Framework.MVC.Resources

@model Topppro.Entities.Attribute

@{
    ViewBag.Title = PersistanceResource.Create;
}

<h2>@PersistanceResource.Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Attribute</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Product.Serie.CategoryId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CategoryId", PersistanceResource.Selection)
            @Html.ValidationMessageFor(model => model.Product.Serie.CategoryId)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Product.SerieId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("SerieId", Enumerable.Empty<SelectListItem>(), PersistanceResource.Selection)
            @Html.ValidationMessageFor(model => model.Product.SerieId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProductId", Enumerable.Empty<SelectListItem>(), PersistanceResource.Selection)
            @Html.ValidationMessageFor(model => model.ProductId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CultureId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CultureId", PersistanceResource.Selection)
            @Html.ValidationMessageFor(model => model.CultureId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Value)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Value, new { @class = "mceEditor" })
            @Html.ValidationMessageFor(model => model.Value)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Priority)
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Enabled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Enabled)
            @Html.ValidationMessageFor(model => model.Enabled)
        </div>

        <p>
            <input type="submit" value="@PersistanceResource.Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="@Url.Content("~/Areas/SecureSite/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/SecureSite/Plugins/TinyMCE/tinymce.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/SecureSite/Plugins/TinyMCE/jquery.tinymce.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/SecureSite/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @Html.Partial("_TinyMCE")
    <script type="text/javascript">
        $(document).ready(function () {
            $('#CategoryId').bind('change', function () {

                $('#SerieId')
                    .children('option:not(:first)')
                    .remove();

                if (!$(this).val())
                    return;

                $.getJSON('@Url.Action("LoadSeriesByCategoryId")', { id: $(this).val() }, function (data, status, xhr) {
                    $(data).each(function (ix, el) {
                        $('#SerieId')
                            .append($("<option></option>")
                                .attr("value", el.Value)
                                .text(el.Text));
                    });
                });
            })

            $('#SerieId').bind('change', function () {

                $('#ProductId')
                    .children('option:not(:first)')
                    .remove();

                if (!$(this).val())
                    return;

                $.getJSON('@Url.Action("LoadProductsBySerieId")', { id: $(this).val() }, function (data, status, xhr) {
                    $(data).each(function (ix, el) {
                        $('#ProductId')
                            .append($("<option></option>")
                                .attr("value", el.Value)
                                .text(el.Text));
                    });
                });
            })

        });
    </script>
}