@using Framework.MVC.Resources
@using Framework.MVC.Extensions
@using Topppro.WebSite.Areas.SecureSite.Extensions

@model IEnumerable<Topppro.Entities.Distributor>

@{
    ViewBag.Title = PersistanceResource.Index;
}

@section Styles {
    <link rel="Stylesheet" type="text/css" href="@Url.Content("~/Areas/SecureSite/Scripts/dataTables/dataTables.bootstrap.css")" />
}

@section Toolbar {
    @Html.Toolbar()
}

<table class="table table-striped table-bordered table-hover" id="data">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CountryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CultureId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enabled)
            </th>
            <th>
                @PersistanceResource.Actions
            </th>
        </tr>
    </thead>
</table>

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Areas/SecureSite/Scripts/dataTables/jquery.dataTables.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Areas/SecureSite/Scripts/dataTables/dataTables.bootstrap.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#data').dataTable({
                bProcessing: true,
                bServerSide: true,
                sAjaxSource: document.URL,
                sServerMethod: 'POST',
                aoColumns: [
                    { mDataProp: 'Country' },
                    { mDataProp: 'Culture' },
                    { mDataProp: 'Name' },
                    { mDataProp: 'Priority' },
                    {
                        mDataProp: 'Enabled',
                        mRender: function (o) {
                            if (o === true)
                                return '@Html.CheckBox("enabled", true, new { disabled = "disabled" })';
                            else
                                return '@Html.CheckBox("enabled", false, new { disabled = "disabled" })';
                        }
                    },
                    {
                        mData: 'Id',
                        bSortable: false,
                        mRender: function (o) {
                            var tpl = '@Html.ActionLink(PersistanceResource.Edit, "Edit", new { id = 0}) |' +
                                      '@Html.ActionLink(PersistanceResource.Details, "Details", new { id = 0 }) |' +
                                      '@Html.ActionLink(PersistanceResource.Delete, "Delete", new { id = 0 })';

                            return tpl.replace(/0/g, o);
                        }
                    }
                ]
            });
        });
    </script>
}
