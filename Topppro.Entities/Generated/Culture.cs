//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;


namespace Topppro.Entities
{
    [Serializable]
    public partial class Culture
    {
        #region Primitive Properties
    
        public virtual int CultureId
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Code
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
    	//[XmlElement("Distributor", typeof(Collection<Distributor>))]
        public virtual ICollection<Distributor> Distributor
        {
            get
            {
                if (_distributor == null)
                {
                    var newCollection = new FixupCollection<Distributor>();
                    newCollection.CollectionChanged += FixupDistributor;
                    _distributor = newCollection;
                }
                return _distributor;
            }
            set
            {
                if (!ReferenceEquals(_distributor, value))
                {
                    var previousValue = _distributor as FixupCollection<Distributor>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDistributor;
                    }
                    _distributor = value;
                    var newValue = value as FixupCollection<Distributor>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDistributor;
                    }
                }
            }
        }
    	//[XmlElement("Distributor", typeof(Collection<Distributor>))]
        private ICollection<Distributor> _distributor;
    
    	//[XmlElement("Bullet", typeof(Collection<Bullet>))]
        public virtual ICollection<Bullet> Bullet
        {
            get
            {
                if (_bullet == null)
                {
                    var newCollection = new FixupCollection<Bullet>();
                    newCollection.CollectionChanged += FixupBullet;
                    _bullet = newCollection;
                }
                return _bullet;
            }
            set
            {
                if (!ReferenceEquals(_bullet, value))
                {
                    var previousValue = _bullet as FixupCollection<Bullet>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBullet;
                    }
                    _bullet = value;
                    var newValue = value as FixupCollection<Bullet>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBullet;
                    }
                }
            }
        }
    	//[XmlElement("Bullet", typeof(Collection<Bullet>))]
        private ICollection<Bullet> _bullet;
    
    	//[XmlElement("Attribute", typeof(Collection<Attribute>))]
        public virtual ICollection<Attribute> Attribute
        {
            get
            {
                if (_attribute == null)
                {
                    var newCollection = new FixupCollection<Attribute>();
                    newCollection.CollectionChanged += FixupAttribute;
                    _attribute = newCollection;
                }
                return _attribute;
            }
            set
            {
                if (!ReferenceEquals(_attribute, value))
                {
                    var previousValue = _attribute as FixupCollection<Attribute>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAttribute;
                    }
                    _attribute = value;
                    var newValue = value as FixupCollection<Attribute>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAttribute;
                    }
                }
            }
        }
    	//[XmlElement("Attribute", typeof(Collection<Attribute>))]
        private ICollection<Attribute> _attribute;
    
    	//[XmlElement("Assn_DownloadCulture", typeof(Collection<Assn_DownloadCulture>))]
        public virtual ICollection<Assn_DownloadCulture> Assn_DownloadCulture
        {
            get
            {
                if (_assn_DownloadCulture == null)
                {
                    var newCollection = new FixupCollection<Assn_DownloadCulture>();
                    newCollection.CollectionChanged += FixupAssn_DownloadCulture;
                    _assn_DownloadCulture = newCollection;
                }
                return _assn_DownloadCulture;
            }
            set
            {
                if (!ReferenceEquals(_assn_DownloadCulture, value))
                {
                    var previousValue = _assn_DownloadCulture as FixupCollection<Assn_DownloadCulture>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAssn_DownloadCulture;
                    }
                    _assn_DownloadCulture = value;
                    var newValue = value as FixupCollection<Assn_DownloadCulture>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAssn_DownloadCulture;
                    }
                }
            }
        }
    	//[XmlElement("Assn_DownloadCulture", typeof(Collection<Assn_DownloadCulture>))]
        private ICollection<Assn_DownloadCulture> _assn_DownloadCulture;

        #endregion
        #region Association Fixup
    
        private void FixupDistributor(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Distributor item in e.NewItems)
                {
                    item.Culture = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Distributor item in e.OldItems)
                {
                    if (ReferenceEquals(item.Culture, this))
                    {
                        item.Culture = null;
                    }
                }
            }
        }
    
        private void FixupBullet(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Bullet item in e.NewItems)
                {
                    item.Culture = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Bullet item in e.OldItems)
                {
                    if (ReferenceEquals(item.Culture, this))
                    {
                        item.Culture = null;
                    }
                }
            }
        }
    
        private void FixupAttribute(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Attribute item in e.NewItems)
                {
                    item.Culture = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Attribute item in e.OldItems)
                {
                    if (ReferenceEquals(item.Culture, this))
                    {
                        item.Culture = null;
                    }
                }
            }
        }
    
        private void FixupAssn_DownloadCulture(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Assn_DownloadCulture item in e.NewItems)
                {
                    item.Culture = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Assn_DownloadCulture item in e.OldItems)
                {
                    if (ReferenceEquals(item.Culture, this))
                    {
                        item.Culture = null;
                    }
                }
            }
        }

        #endregion
    }
}
