//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;


namespace Topppro.Entities
{
    [Serializable]
    public partial class Package
    {
        #region Primitive Properties
    
        public virtual int PackageId
        {
            get;
            set;
        }
    
        public virtual int ModelId
        {
            get { return _modelId; }
            set
            {
                if (_modelId != value)
                {
                    if (Model != null && Model.ModelId != value)
                    {
                        Model = null;
                    }
                    _modelId = value;
                }
            }
        }
        private int _modelId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Folder
        {
            get;
            set;
        }
    
        public virtual string Manual
        {
            get;
            set;
        }
    
        public virtual bool Draft
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
    	//[XmlElement("Assn_CategorySeriePackage", typeof(Collection<Assn_CategorySeriePackage>))]
        public virtual ICollection<Assn_CategorySeriePackage> Assn_CategorySeriePackage
        {
            get
            {
                if (_assn_CategorySeriePackage == null)
                {
                    var newCollection = new FixupCollection<Assn_CategorySeriePackage>();
                    newCollection.CollectionChanged += FixupAssn_CategorySeriePackage;
                    _assn_CategorySeriePackage = newCollection;
                }
                return _assn_CategorySeriePackage;
            }
            set
            {
                if (!ReferenceEquals(_assn_CategorySeriePackage, value))
                {
                    var previousValue = _assn_CategorySeriePackage as FixupCollection<Assn_CategorySeriePackage>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAssn_CategorySeriePackage;
                    }
                    _assn_CategorySeriePackage = value;
                    var newValue = value as FixupCollection<Assn_CategorySeriePackage>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAssn_CategorySeriePackage;
                    }
                }
            }
        }
    	//[XmlElement("Assn_CategorySeriePackage", typeof(Collection<Assn_CategorySeriePackage>))]
        private ICollection<Assn_CategorySeriePackage> _assn_CategorySeriePackage;
    
    	//[XmlElement("Assn_PackageProduct", typeof(Collection<Assn_PackageProduct>))]
        public virtual ICollection<Assn_PackageProduct> Assn_PackageProduct
        {
            get
            {
                if (_assn_PackageProduct == null)
                {
                    var newCollection = new FixupCollection<Assn_PackageProduct>();
                    newCollection.CollectionChanged += FixupAssn_PackageProduct;
                    _assn_PackageProduct = newCollection;
                }
                return _assn_PackageProduct;
            }
            set
            {
                if (!ReferenceEquals(_assn_PackageProduct, value))
                {
                    var previousValue = _assn_PackageProduct as FixupCollection<Assn_PackageProduct>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAssn_PackageProduct;
                    }
                    _assn_PackageProduct = value;
                    var newValue = value as FixupCollection<Assn_PackageProduct>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAssn_PackageProduct;
                    }
                }
            }
        }
    	//[XmlElement("Assn_PackageProduct", typeof(Collection<Assn_PackageProduct>))]
        private ICollection<Assn_PackageProduct> _assn_PackageProduct;
    
        public virtual Model Model
        {
            get { return _model; }
            set
            {
                if (!ReferenceEquals(_model, value))
                {
                    var previousValue = _model;
                    _model = value;
                    FixupModel(previousValue);
                }
            }
        }
        private Model _model;

        #endregion
        #region Association Fixup
    
        private void FixupModel(Model previousValue)
        {
            if (previousValue != null && previousValue.Packages.Contains(this))
            {
                previousValue.Packages.Remove(this);
            }
    
            if (Model != null)
            {
                if (!Model.Packages.Contains(this))
                {
                    Model.Packages.Add(this);
                }
                if (ModelId != Model.ModelId)
                {
                    ModelId = Model.ModelId;
                }
            }
        }
    
        private void FixupAssn_CategorySeriePackage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Assn_CategorySeriePackage item in e.NewItems)
                {
                    item.Package = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Assn_CategorySeriePackage item in e.OldItems)
                {
                    if (ReferenceEquals(item.Package, this))
                    {
                        item.Package = null;
                    }
                }
            }
        }
    
        private void FixupAssn_PackageProduct(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Assn_PackageProduct item in e.NewItems)
                {
                    item.Package = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Assn_PackageProduct item in e.OldItems)
                {
                    if (ReferenceEquals(item.Package, this))
                    {
                        item.Package = null;
                    }
                }
            }
        }

        #endregion
    }
}
