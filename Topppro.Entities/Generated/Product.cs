//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;


namespace Topppro.Entities
{
    [Serializable]
    public partial class Product
    {
        #region Primitive Properties
    
        public virtual int ProductId
        {
            get;
            set;
        }
    
        public virtual int ModelId
        {
            get { return _modelId; }
            set
            {
                if (_modelId != value)
                {
                    if (Model != null && Model.ModelId != value)
                    {
                        Model = null;
                    }
                    _modelId = value;
                }
            }
        }
        private int _modelId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Folder
        {
            get;
            set;
        }
    
        public virtual string Manual
        {
            get;
            set;
        }
    
        public virtual bool Draft
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
    	//[XmlElement("Assn_CategorySerieProduct", typeof(Collection<Assn_CategorySerieProduct>))]
        public virtual ICollection<Assn_CategorySerieProduct> Assn_CategorySerieProduct
        {
            get
            {
                if (_assn_CategorySerieProduct == null)
                {
                    var newCollection = new FixupCollection<Assn_CategorySerieProduct>();
                    newCollection.CollectionChanged += FixupAssn_CategorySerieProduct;
                    _assn_CategorySerieProduct = newCollection;
                }
                return _assn_CategorySerieProduct;
            }
            set
            {
                if (!ReferenceEquals(_assn_CategorySerieProduct, value))
                {
                    var previousValue = _assn_CategorySerieProduct as FixupCollection<Assn_CategorySerieProduct>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAssn_CategorySerieProduct;
                    }
                    _assn_CategorySerieProduct = value;
                    var newValue = value as FixupCollection<Assn_CategorySerieProduct>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAssn_CategorySerieProduct;
                    }
                }
            }
        }
    	//[XmlElement("Assn_CategorySerieProduct", typeof(Collection<Assn_CategorySerieProduct>))]
        private ICollection<Assn_CategorySerieProduct> _assn_CategorySerieProduct;
    
    	//[XmlElement("Assn_PackageProduct", typeof(Collection<Assn_PackageProduct>))]
        public virtual ICollection<Assn_PackageProduct> Assn_PackageProduct
        {
            get
            {
                if (_assn_PackageProduct == null)
                {
                    var newCollection = new FixupCollection<Assn_PackageProduct>();
                    newCollection.CollectionChanged += FixupAssn_PackageProduct;
                    _assn_PackageProduct = newCollection;
                }
                return _assn_PackageProduct;
            }
            set
            {
                if (!ReferenceEquals(_assn_PackageProduct, value))
                {
                    var previousValue = _assn_PackageProduct as FixupCollection<Assn_PackageProduct>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAssn_PackageProduct;
                    }
                    _assn_PackageProduct = value;
                    var newValue = value as FixupCollection<Assn_PackageProduct>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAssn_PackageProduct;
                    }
                }
            }
        }
    	//[XmlElement("Assn_PackageProduct", typeof(Collection<Assn_PackageProduct>))]
        private ICollection<Assn_PackageProduct> _assn_PackageProduct;
    
    	//[XmlElement("Attributes", typeof(Collection<Attribute>))]
        public virtual ICollection<Attribute> Attributes
        {
            get
            {
                if (_attributes == null)
                {
                    var newCollection = new FixupCollection<Attribute>();
                    newCollection.CollectionChanged += FixupAttributes;
                    _attributes = newCollection;
                }
                return _attributes;
            }
            set
            {
                if (!ReferenceEquals(_attributes, value))
                {
                    var previousValue = _attributes as FixupCollection<Attribute>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAttributes;
                    }
                    _attributes = value;
                    var newValue = value as FixupCollection<Attribute>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAttributes;
                    }
                }
            }
        }
    	//[XmlElement("Attributes", typeof(Collection<Attribute>))]
        private ICollection<Attribute> _attributes;
    
        public virtual Model Model
        {
            get { return _model; }
            set
            {
                if (!ReferenceEquals(_model, value))
                {
                    var previousValue = _model;
                    _model = value;
                    FixupModel(previousValue);
                }
            }
        }
        private Model _model;

        #endregion
        #region Association Fixup
    
        private void FixupModel(Model previousValue)
        {
            if (previousValue != null && previousValue.Product.Contains(this))
            {
                previousValue.Product.Remove(this);
            }
    
            if (Model != null)
            {
                if (!Model.Product.Contains(this))
                {
                    Model.Product.Add(this);
                }
                if (ModelId != Model.ModelId)
                {
                    ModelId = Model.ModelId;
                }
            }
        }
    
        private void FixupAssn_CategorySerieProduct(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Assn_CategorySerieProduct item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Assn_CategorySerieProduct item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }
    
        private void FixupAssn_PackageProduct(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Assn_PackageProduct item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Assn_PackageProduct item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }
    
        private void FixupAttributes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Attribute item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Attribute item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }

        #endregion
    }
}
